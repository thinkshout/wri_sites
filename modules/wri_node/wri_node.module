<?php

/**
 * @file
 * Wri Node module code.
 */

use Drupal\wri_node\General;
use Drupal\node\NodeInterface;
use Drupal\node\Entity\Node;
use Drupal\image\Entity\ImageStyle;
use Drupal\responsive_image\Entity\ResponsiveImageStyle;

/**
 * Implements hook_preprocess_hook().
 */
function wri_node_preprocess_wri_page_hero(&$context) {
  $node = \Drupal::routeMatch()->getParameter('node');
  if (!$node) {
    $node_route = \Drupal::routeMatch()->getRawParameter('section_storage');
    $node_id = str_replace('node.', '', $node_route);
    $node = Node::load($node_id);
  }
  if ($node instanceof NodeInterface) {
    if (isset($node->field_main_image->entity->field_media_image->entity->uri->value)) {
      $uri = $node->field_main_image->entity->field_media_image->entity->uri->value;
      $alt = $node->field_main_image->entity->field_media_image->alt;
      $responsive_image_style = ResponsiveImageStyle::load('landing_page_hero');
      $image_style = ImageStyle::load($responsive_image_style->getFallbackImageStyle());
      $build_uri = $image_style->buildUri($uri);
      $image_factory = \Drupal::service('image.factory')->get($build_uri);
      $height = $image_factory->getToolkit()->getHeight();
      $width = $image_factory->getToolkit()->getWidth();

      $build = [
        '#uri' => $uri,
        '#attributes' => [
          'alt'   => $alt,
          'loading' => 'eager',
          'width' => $height,
          'height' => $width,
        ],
        '#theme' => 'responsive_image',
        '#responsive_image_style_id' => 'landing_page_hero',
      ];
      $context['content']['hero_image'] = $build;
      General::$htmlClasses[] = 'transparent-header white';
    }
    else {
      $context['content']['hero_image'] = [];
    }
    $context['content']['title']['#markup'] = isset($node->field_long_title->value) ? check_markup($node->field_long_title->value, 'basic_html') : $node->getTitle();
    $context['content']['intro']['#markup'] = isset($node->field_intro->value) ? check_markup($node->field_intro->value, 'basic_html') : '';
  }
}

/**
 * Implements hook_preprocess_hook().
 */
function wri_node_preprocess_layout__card(&$variables) {
  if (isset($variables["content"]["field_primary_topic"][0]["#title"])) {
    $image_url = \Drupal::service('extension.list.module')
        ->getPath('wri_node') . '/images/' . strtolower(str_replace(' ', '-', $variables["content"]["field_primary_topic"][0]["#title"])) . '.jpg';
    if (!file_exists($image_url)) {
      $image_url = \Drupal::service('extension.list.module')
          ->getPath('wri_node') . '/images/default.jpg';
    }
  }
  else {
    $image_url = \Drupal::service('extension.list.module')
        ->getPath('wri_node') . '/images/default.jpg';
  }
  $variables['default_image'] = [
    '#theme' => 'image',
    '#uri' => $image_url,
    '#alt' => '',
  ];
}
