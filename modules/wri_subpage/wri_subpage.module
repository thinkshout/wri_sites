<?php

/**
 * @file
 * Subpage module hook implementations.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\menu_link_content\Entity\MenuLinkContent;

/**
 * Implements hook_form_BASE_FORM_ID_alter() for \Drupal\node\NodeForm.
 */
function wri_subpage_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $node = $form_state->getFormObject()->getEntity();
  if ($form['menu']['enabled']['#default_value'] === 0 && isset($node->field_parent_page->target_id)) {
    $parent = $node->field_parent_page->entity;
    if ($parent && $parent->id()) {
      // Set the correct menu for microsites vs all others.
      'microsite' == $parent->bundle() ? $menu_name = 'microsites' : $menu_name = 'page-hierarchies';
      $menu_link_manager = \Drupal::service('plugin.manager.menu.link');
      $parent_link_menu_id = array_key_first($menu_link_manager->loadLinksByRoute('entity.node.canonical', ['node' => $parent->id()], $menu_name));
      $form['menu']['link']['menu_parent']['#default_value'] = $menu_name . ':' . $parent_link_menu_id;
      $form['menu']['link']['menu_parent']['#description'] = t('Parent suggestion set from the "Parent page" field.');
    }
  }
  $position = array_search('menu_ui_form_node_form_submit', $form['actions']['submit']['#submit']);
  array_splice($form['actions']['submit']['#submit'], 4, 0, 'wri_subpage_set_menu');
}

/**
 * Submit handler to prepare a menu based on the node's parent value.
 *
 * @param array $form
 *   The form array.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The form state object.
 */
function wri_subpage_set_menu(array &$form, FormStateInterface $form_state) {
  if ($form["#form_id"] == 'node_subpage_form') {
    $entity = $form_state->getFormObject()->getEntity();
    $parent = $entity->field_parent_page->entity;
    if ($parent && $parent->id()) {
      // Set the correct menu for microsites vs all others.
      'microsite' == $parent->bundle() ? $menu_name = 'microsites' : $menu_name = 'page-hierarchies';
      $menu_link_manager = \Drupal::service('plugin.manager.menu.link');

      // Save the parent at the root of the menu, if not already there.
      $parent_link_menu_id = array_key_first($menu_link_manager->loadLinksByRoute('entity.node.canonical', ['node' => $parent->id()], $menu_name));
      if (!$parent_link_menu_id) {
        $parent_link_menu = MenuLinkContent::create([
          'title' => $parent->label(),
          'link' => ['uri' => 'entity:node/' . $parent->id()],
          'menu_name' => $menu_name,
          'expanded' => TRUE,
        ]);
        $parent_link_menu->save();
        $parent_link_menu_id = $parent_link_menu->getPluginId();
      }

      // Ensure the new menu link always appears at the back of the list.
      $weight = 0;
      $menu_link_content_children_ids = $menu_link_manager->getChildIds($parent_link_menu_id);
      $menu_link_content_children = MenuLinkContent::loadMultiple($menu_link_content_children_ids);
      foreach ($menu_link_content_children as $link) {
        $weight = max($weight, $link->getWeight());
      }

      $form_state->setValue('menu', [
        'enabled' => TRUE,
        'title' => $entity->label(),
        'menu_parent' => $menu_name . ':' .$parent_link_menu_id,
        'weight' => $weight + 1,
        'description' => '',
      ]);
    }
  }
}
