<?php

/**
 * @file
 * Narrative Taxonomy install and update hooks..
 */

use Drupal\Core\Utility\UpdateException;

/**
 * Updates Listing arguments to use our config snippet for Narrative taxonomies.
 */
function wri_narrative_update_9501() {
  // Import the updated value:
  \Drupal::service('distro_helper.updates')->updateConfig('field.field.block_content.narrative_taxonomy.field_listing', [
    'default_value#0#arguments',
  ], 'wri_narrative');

  // Load all projects with the listing_block having the old value.
  $old_value = '[bc:field_custom_results:array:target_id:join:+]/[bc:field_filter_by_region:target_id]/[bc:field_tag:target_id]';

  // Save all existing blocks with the new value.
  $definitions = \Drupal::service('entity_field.manager')->getFieldDefinitions('block_content', 'narrative_taxonomy');
  if (isset($definitions['field_listing'])) {
    $default_value = $definitions['field_listing']->getDefaultValueLiteral();
    $default_value_string = $default_value[0]['arguments'];

    $database = \Drupal::database();
    $database->update('block_content__field_listing')
      ->fields([
        'field_listing_arguments' => $default_value_string,
      ])
      ->condition('field_listing_arguments', $old_value)
      ->execute();
    $database->update('block_content_revision__field_listing')
      ->fields([
        'field_listing_arguments' => $default_value_string,
      ])
      ->condition('field_listing_arguments', $old_value)
      ->execute();
  }
  else {
    throw new UpdateException('This should be run after importing the field_listing to the listing_block block type.');
  }
}

/**
 * Translatable field update.
 */
function wri_narrative_update_10301() {
  \Drupal::service('distro_helper.updates')->updateConfig('field.field.block_content.narrative_taxonomy.field_listing', [
    'translatable',
  ], 'wri_narrative');
  \Drupal::service('distro_helper.updates')->updateConfig('field.field.paragraph.narrative_taxonomy.field_block', [
    'translatable',
  ], 'wri_narrative');
}
