<?php

/**
 * @file
 * Install, update and uninstall hooks for the wri_sites install profile.
 */

use Drupal\taxonomy\Entity\Term;
use Drupal\Core\Config\FileStorage;
use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function wri_taxonomy_install() {
  // Add terms needed for different configs.
  // Article: 49b8dec4-f95c-4b9f-8ad7-3dd51706da53.
  $article = Term::create([
    'name' => 'Article',
    'vid' => 'resource_type',
    'uuid' => '49b8dec4-f95c-4b9f-8ad7-3dd51706da53',
  ]);
  $article->save();
  // Podcasts: taxonomy_term:resource_type:721a8bb1-b5a4-49dc-ad12-e65066833beb.
  Term::create([
    'name' => 'Podcast',
    'parent' => $article->id(),
    'vid' => 'resource_type',
    'uuid' => '721a8bb1-b5a4-49dc-ad12-e65066833beb',
  ])->save();
}

/**
 * Update the argument for the resource type to allow spaces.
 */
function wri_taxonomy_update_9501() {
  \Drupal::service('distro_helper.updates')->updateConfig('views.view.resource_types', ['display#default#display_options#arguments'], 'wri_taxonomy');
}

/**
 * Add taxonomy term topics and subtopics.
 */
function wri_taxonomy_update_9502() {
    // Create a new field: field_media_oembed_video.
    $entitytype = 'taxonomy_term';
    $field = 'field_default_image';
    $field_storage_name = 'field.storage.' . $entitytype . '.' . $field;
    $bundle = 'topics_and_subtopics';
    $config_directory = new FileStorage(\Drupal::service('extension.list.module')->getPath('bene_media'), '/config/install');
    $config_record = $config_directory->read($field_storage_name);
    if (!FieldStorageConfig::loadByName($config_record['entity_type'], $config_record['field_name'])) {
      FieldStorageConfig::create($config_record)->save();
    }
    $field_config_name = 'field.field.' . $entitytype . '.' . $bundle . '.' . $field;
    $config_record = $config_directory->read($field_config_name);
    if (!FieldConfig::loadByName($config_record['entity_type'], $config_record['bundle'], $config_record['field_name'])) {
      FieldConfig::create($config_record)->save();
    }
  }
}
