<?php

/**
 * @file
 * Install, update and uninstall hooks for the wri_package2 install profile.
 */

use Drupal\block_content\Entity\BlockContent;
use Drupal\paragraphs\Entity\Paragraph;
use Drupal\user\Entity\Role;

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function wri_package2_install() {
  \Drupal::configFactory()
    ->getEditable('user.settings')
    ->set('register', 'admin_only')
    ->save();

  // Adds a block content the theme will need.
  _install_filedownload_blocks();

  // We have to install our theme after claro, or the admin theme is messed up.
  \Drupal::service('theme_installer')->install(['ts_wrin'], TRUE);

  \Drupal::configFactory()
    ->getEditable('node.settings')
    ->set('use_admin_theme', TRUE)
    ->save();

  // Set the default field type to "reset", stripping out all markup.
  \Drupal::configFactory()
    ->getEditable('ds.settings')
    ->set('field_template', TRUE)
    ->set('ft-default', 'reset')
    ->save();

  _install_default_hero_block();
  _install_io_and_country_blocks();
  _install_default_program_hero();
  _install_narrative_taxonomy();
  _set_scheduled_transitions();
  _set_anonymous_authenticated_permissions();
}

/**
 * Installs the default hero block for pages.
 */
function _install_default_hero_block() {
  // Adds a default Node hero block so the layout builder can use it.
  $block = BlockContent::create([
    'info' => 'Node Hero',
    'type' => 'hero',
    'langcode' => 'en',
    'revision_id' => 8,
    'reusable' => FALSE,
  ]);
  $block->save();
}

/**
 * Installs the default Office and Country blocks for Regions/IOs.
 */
function _install_io_and_country_blocks() {
  $block = BlockContent::create([
    'info' => 'International Offices',
    'type' => 'listing_block',
    'langcode' => 'en',
    'revision_id' => 45,
    'reusable' => FALSE,
    'field_more_link' => [
      'uri' => '',
      'title' => '',
    ],
    'field_listing' => [
      'target_id' => 'content_listing',
      'display_id' => 'tiles',
      'arguments' => '[block_content:field_content_types:target_id]/[block_content:field_featured:*:target_id:join:+]/[block_content:field_filter_by_region:target_id]+[current-page:node:field_region:target_id]',
      'items_to_display' => 8,
    ],
    'field_content_types' => [
      'target_id' => 'international_office',
    ],
  ]);
  $block->save();

  $block = BlockContent::create([
    'info' => 'Active Countries',
    'type' => 'listing_block',
    'langcode' => 'en',
    'revision_id' => 46,
    'reusable' => FALSE,
    'field_more_link' => [
      'uri' => '',
      'title' => '',
    ],
    'field_listing' => [
      'target_id' => 'countries',
      'display_id' => 'cards',
      'arguments' => '[block_content:field_content_types:target_id]/[block_content:field_featured:*:target_id:join:+]/[block_content:field_filter_by_region:target_id]+[current-page:node:field_region:target_id]',
      'items_to_display' => 24,
    ],
  ]);
  $block->save();
}

/**
 * Installs the file interrupter block.
 */
function _install_filedownload_blocks() {
  // Adds a default Node hero block so the layout builder can use it.
  $block = BlockContent::create([
    'info' => 'File download interrupter',
    'type' => 'modal',
    'field_title' => 'Tell us about yourself',
    'field_webform' => 'call_to_action',
    'field_cta_background' => 'has-blue-background-color',
    'langcode' => 'en',
    'reusable' => TRUE,
    'uuid' => 'd21dee48-13ad-4782-abcd-68b8582a5c3e',
  ]);
  $block->save();
}

/**
 * Installs the default Happening Now hero for Programs.
 */
function _install_default_program_hero() {
  // Create the default hero paragraph.
  $paragraph = Paragraph::create([
    'type' => 'happening_now',
  ]);
  $paragraph->save();

  // Adds a default Node hero block so the layout builder can use it.
  $block = BlockContent::create([
    'info' => 'Happening Now',
    'type' => 'hero',
    'langcode' => 'en',
    'revision_id' => 100070,
    'reusable' => FALSE,
    'field_hero_type' => $paragraph,
  ]);
  $block->save();
}

/**
 * Installs the Narrative Taxonomy block.
 */
function _install_narrative_taxonomy() {
  // Adds a default Node hero block so the layout builder can use it.
  $block = BlockContent::create([
    'info' => 'Narrative Taxonomy',
    'type' => 'narrative_taxonomy',
    'langcode' => 'en',
    'revision_id' => 100482,
    'reusable' => FALSE,
  ]);
  $block->save();
}

/**
 * Sets the scheduled transitions for the content publishing workflow.
 */
function _set_scheduled_transitions() {
  // Load the workflows.workflow.content_publishing config.
  $workflow = \Drupal::configFactory()->getEditable('workflows.workflow.content_publishing');
  // Add all the nodes to it under entity_types.
  $data = $workflow->get('type_settings.entity_types.node');
  $data = [
    'article',
    'data',
    'event',
    'homepage',
    'international_office',
    'page',
    'program_center',
    'project_detail',
    'publication',
    'region',
    'simple_page',
    'subpage',
  ];
  $workflow->set('type_settings.entity_types.node', $data);
  // Set the transitions.
  $workflow->save();
  
  // Load the sheduled transition settings.
  $scheduled_transition = \Drupal::configFactory()->getEditable('scheduled_transition.settings');
  $data = [
    [
      'entity_type' => 'node',
      'bundle' => 'article',
    ],
    [
      'entity_type' => 'node',
      'bundle' => 'data',
    ],
    [
      'entity_type' => 'node',
      'bundle' => 'event',
    ],
    [
      'entity_type' => 'node',
      'bundle' => 'homepage',
    ],
    [
      'entity_type' => 'node',
      'bundle' => 'international_office',
    ],
    [
      'entity_type' => 'node',
      'bundle' => 'page',
    ],
    [
      'entity_type' => 'node',
      'bundle' => 'program_center',
    ],
    [
      'entity_type' => 'node',
      'bundle' => 'project_detail',
    ],
    [
      'entity_type' => 'node',
      'bundle' => 'publication',
    ],
    [
      'entity_type' => 'node',
      'bundle' => 'region',
    ],
    [
      'entity_type' => 'node',
      'bundle' => 'simple_page',
    ],
    [
      'entity_type' => 'node',
      'bundle' => 'subpage',
    ],
  ];
  $scheduled_transition->set('bundles', $data);
  $scheduled_transition->save();
}

/**
 * Sets the anonymous and authenticated permissions.
 */
function _set_anonymous_authenticated_permissions() {
  \Drupal::service('distro_helper.updates')->installConfig('user.role.anonymous','wri_package2', 'post-install', TRUE);
  \Drupal::service('distro_helper.updates')->installConfig('user.role.authenticated','wri_package2', 'post-install', TRUE);
  \Drupal::service('distro_helper.updates')->installConfig('user.role.content_editor','wri_package2', 'post-install', TRUE);
  \Drupal::service('distro_helper.updates')->installConfig('user.role.editorial','wri_package2', 'post-install', TRUE);
  \Drupal::service('distro_helper.updates')->installConfig('user.role.hr','wri_package2', 'post-install', TRUE);
}
