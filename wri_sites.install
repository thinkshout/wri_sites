<?php

/**
 * @file
 * Install, update and uninstall hooks for the wri_sites install profile.
 */

use Drupal\block_content\Entity\BlockContent;
use Drupal\paragraphs\Entity\Paragraph;
use Drupal\Core\Config\FileStorage;

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function wri_sites_install() {
  \Drupal::configFactory()
    ->getEditable('user.settings')
    ->set('register', 'admin_only')
    ->save();

  // We have to install our theme after claro, or the admin theme is messed up.
  \Drupal::service('theme_installer')->install(['ts_wrin'], TRUE);

  \Drupal::configFactory()
    ->getEditable('node.settings')
    ->set('use_admin_theme', TRUE)
    ->save();

  // Set the default field type to "reset", stripping out all markup.
  \Drupal::configFactory()
    ->getEditable('ds.settings')
    ->set('field_template', TRUE)
    ->set('ft-default', 'reset')
    ->save();

  // Delete the "body" field from all blocks.
  \Drupal::configFactory()
    ->getEditable('field.storage.block_content.body')
    ->delete();

  _install_default_hero_block();
  _install_io_and_country_blocks();
  _install_default_program_hero();
}

/**
 * Enables the Happening Now module and gives it starter content.
 */
function wri_sites_update_8901() {
  \Drupal::service('module_installer')->install(['paragraphs']);
  // Ensure the `field.storage.block_content.field_hero_type` config exists.
  // Obtain configuration from yaml files.
  $module_handler = \Drupal::service('module_handler');
  $module_path    = $module_handler->getModule('wri_block')->getPath();
  $config_path    = $module_path . '/config/install';
  $source         = new FileStorage($config_path);

  // Obtain the storage manager for field storage bases
  // Create a new field from the yaml configuration and save.
  \Drupal::entityTypeManager()->getStorage('field_storage_config')
    ->create($source->read('field.storage.block_content.field_hero_type'))
    ->save();

  \Drupal::service('module_installer')->install(['wri_happening_now']);

  _install_default_hero_block();
}

/**
 * Disables Gutenberg.
 */
function wri_sites_update_8902() {
  \Drupal::configFactory()->getEditable('filter.format.gutenberg')->delete();

  // Get the editable storage for all filters.
  \Drupal::configFactory()
    ->getEditable('filter.format.basic_html')->delete();

  \Drupal::configFactory()
    ->getEditable('filter.format.plain_text')->delete();

  \Drupal::configFactory()->getEditable('editor.editor.gutenberg')->delete();

  // Uninstall the module.
  \Drupal::service('module_installer')->uninstall(['gutenberg']);
}

/**
 * Adds a default listing blocks for regions.
 */
function wri_sites_update_8903() {
  _install_io_and_country_blocks();
}

/**
 * Adds a default hero blocks for programs.
 */
function wri_sites_update_8904() {
  _install_default_program_hero();
}

/**
 * Installs the default hero block for pages.
 */
function _install_default_hero_block() {
  // Create the default hero paragraph.
  $paragraph = Paragraph::create([
    'type' => 'default_hero',
  ]);
  $paragraph->save();

  // Adds a default Node hero block so the layout builder can use it.
  $block = BlockContent::create([
    'info' => 'Node Hero',
    'type' => 'hero',
    'langcode' => 'en',
    'revision_id' => 8,
    'reusable' => FALSE,
    'field_hero_type' => $paragraph,
  ]);
  $block->save();
}

/**
 * Installs the default Office and Country blocks for Regions/IOs.
 */
function _install_io_and_country_blocks() {
  $block = BlockContent::create([
    'info' => 'International Offices',
    'type' => 'listing_block',
    'langcode' => 'en',
    'revision_id' => 45,
    'reusable' => FALSE,
    'field_more_link' => [
      'uri' => '',
      'title' => '',
    ],
    'field_listing' => [
      'target_id' => 'content_listing',
      'display_id' => 'tiles',
      'arguments' => '[block_content:field_content_types:target_id]/[block_content:field_featured:*:target_id:join:+]/[block_content:field_filter_by_region:target_id]+[current-page:node:field_region:target_id]',
      'items_to_display' => 8,
    ],
    'field_content_types' => [
      'target_id' => 'international_office',
    ],
  ]);
  $block->save();

  $block = BlockContent::create([
    'info' => 'Active Countries',
    'type' => 'listing_block',
    'langcode' => 'en',
    'revision_id' => 46,
    'reusable' => FALSE,
    'field_more_link' => [
      'uri' => '',
      'title' => '',
    ],
    'field_listing' => [
      'target_id' => 'countries',
      'display_id' => 'cards',
      'arguments' => '[block_content:field_content_types:target_id]/[block_content:field_featured:*:target_id:join:+]/[block_content:field_filter_by_region:target_id]+[current-page:node:field_region:target_id]',
      'items_to_display' => 24,
    ],
  ]);
  $block->save();
}

/**
 * Installs the default Happening Now hero for Programs.
 */
function _install_default_program_hero() {
  // Create the default hero paragraph.
  $paragraph = Paragraph::create([
    'type' => 'happening_now',
  ]);
  $paragraph->save();

  // Adds a default Node hero block so the layout builder can use it.
  $block = BlockContent::create([
    'info' => 'Happening Now',
    'type' => 'hero',
    'langcode' => 'en',
    'revision_id' => 100000,
    'reusable' => FALSE,
    'field_hero_type' => $paragraph,
  ]);
  $block->save();
}
