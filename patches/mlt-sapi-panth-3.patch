diff --git a/src/Plugin/SolrConnector/PantheonSolrConnector.php b/src/Plugin/SolrConnector/PantheonSolrConnector.php
index 20157c0..78cb910 100644
--- a/src/Plugin/SolrConnector/PantheonSolrConnector.php
+++ b/src/Plugin/SolrConnector/PantheonSolrConnector.php
@@ -193,4 +193,9 @@ class PantheonSolrConnector extends Solr36Connector {
     return parent::getDataFromHandler($handler, $reset);
   }
 
+  public function getMoreLikeThisQuery() {
+    $this->connect();
+    $this->solr->registerQueryType('mlt', "Drupal\search_api_pantheon\Solarium\MoreLikeThisQuery");
+    return $this->solr->createQuery('mlt');
+  }
 }
diff --git a/src/Solarium/MoreLikeThisQuery.php b/src/Solarium/MoreLikeThisQuery.php
new file mode 100644
index 0000000..8d991e9
--- /dev/null
+++ b/src/Solarium/MoreLikeThisQuery.php
@@ -0,0 +1,32 @@
+<?php
+
+/**
+ * @file
+ * Override MoreLikeThis for Solr 3 compatiblity.
+ */
+
+namespace Drupal\search_api_pantheon\Solarium;
+use Solarium\Component\QueryInterface;
+use Solarium\Core\Client\Adapter\Curl;
+use Solarium\QueryType\MoreLikeThis\Query;
+
+class MoreLikeThisQuery extends Query {
+
+  /**
+   * {@inheritdoc}
+   */
+  public function __construct($options = NULL) {
+    parent::__construct($options);
+    // Force the handler to select because Pantheon uses Solr 3
+    // which did have a separate handler for mlt (I think?)
+    $this->options['handler'] = 'select';
+  }
+
+  /**
+   * {@inheritdoc}
+   */
+  public function setQuery(string $query, array $bind = null): QueryInterface {
+    $this->addParam("qt", "mlt");
+    return parent::setQuery($query, $bind);
+  }
+}
